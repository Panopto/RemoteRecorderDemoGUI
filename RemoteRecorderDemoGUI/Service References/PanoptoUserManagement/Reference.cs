//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RemoteRecorderDemoGUI.PanoptoUserManagement {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthenticationInfo", Namespace="http://schemas.datacontract.org/2004/07/Panopto.Server.Services.PublicAPI.V40")]
    [System.SerializableAttribute()]
    public partial class AuthenticationInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserKeyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthCode {
            get {
                return this.AuthCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthCodeField, value) != true)) {
                    this.AuthCodeField = value;
                    this.RaisePropertyChanged("AuthCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserKey {
            get {
                return this.UserKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.UserKeyField, value) != true)) {
                    this.UserKeyField = value;
                    this.RaisePropertyChanged("UserKey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Panopto.Server.Services.PublicAPI.V40")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EmailSessionNotificationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid[] GroupMembershipsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RemoteRecorderDemoGUI.PanoptoUserManagement.SystemRole SystemRoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserBioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserSettingsUrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EmailSessionNotifications {
            get {
                return this.EmailSessionNotificationsField;
            }
            set {
                if ((this.EmailSessionNotificationsField.Equals(value) != true)) {
                    this.EmailSessionNotificationsField = value;
                    this.RaisePropertyChanged("EmailSessionNotifications");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid[] GroupMemberships {
            get {
                return this.GroupMembershipsField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupMembershipsField, value) != true)) {
                    this.GroupMembershipsField = value;
                    this.RaisePropertyChanged("GroupMemberships");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RemoteRecorderDemoGUI.PanoptoUserManagement.SystemRole SystemRole {
            get {
                return this.SystemRoleField;
            }
            set {
                if ((this.SystemRoleField.Equals(value) != true)) {
                    this.SystemRoleField = value;
                    this.RaisePropertyChanged("SystemRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserBio {
            get {
                return this.UserBioField;
            }
            set {
                if ((object.ReferenceEquals(this.UserBioField, value) != true)) {
                    this.UserBioField = value;
                    this.RaisePropertyChanged("UserBio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserKey {
            get {
                return this.UserKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.UserKeyField, value) != true)) {
                    this.UserKeyField = value;
                    this.RaisePropertyChanged("UserKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserSettingsUrl {
            get {
                return this.UserSettingsUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UserSettingsUrlField, value) != true)) {
                    this.UserSettingsUrlField = value;
                    this.RaisePropertyChanged("UserSettingsUrl");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SystemRole", Namespace="http://schemas.datacontract.org/2004/07/Panopto.Server.Services.PublicAPI.V40")]
    public enum SystemRole : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Videographer = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Admin = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListUsersRequest", Namespace="http://schemas.datacontract.org/2004/07/Panopto.Server.Services.PublicAPI.V40")]
    [System.SerializableAttribute()]
    public partial class ListUsersRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RemoteRecorderDemoGUI.PanoptoUserManagement.Pagination PaginationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RemoteRecorderDemoGUI.PanoptoUserManagement.UserSortField SortByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SortIncreasingField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RemoteRecorderDemoGUI.PanoptoUserManagement.Pagination Pagination {
            get {
                return this.PaginationField;
            }
            set {
                if ((object.ReferenceEquals(this.PaginationField, value) != true)) {
                    this.PaginationField = value;
                    this.RaisePropertyChanged("Pagination");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RemoteRecorderDemoGUI.PanoptoUserManagement.UserSortField SortBy {
            get {
                return this.SortByField;
            }
            set {
                if ((this.SortByField.Equals(value) != true)) {
                    this.SortByField = value;
                    this.RaisePropertyChanged("SortBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SortIncreasing {
            get {
                return this.SortIncreasingField;
            }
            set {
                if ((this.SortIncreasingField.Equals(value) != true)) {
                    this.SortIncreasingField = value;
                    this.RaisePropertyChanged("SortIncreasing");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Pagination", Namespace="http://schemas.datacontract.org/2004/07/Panopto.Server.Services.PublicAPI.V40")]
    [System.SerializableAttribute()]
    public partial class Pagination : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxNumberResultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxNumberResults {
            get {
                return this.MaxNumberResultsField;
            }
            set {
                if ((this.MaxNumberResultsField.Equals(value) != true)) {
                    this.MaxNumberResultsField = value;
                    this.RaisePropertyChanged("MaxNumberResults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageNumber {
            get {
                return this.PageNumberField;
            }
            set {
                if ((this.PageNumberField.Equals(value) != true)) {
                    this.PageNumberField = value;
                    this.RaisePropertyChanged("PageNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserSortField", Namespace="http://schemas.datacontract.org/2004/07/Panopto.Server.Services.PublicAPI.V40")]
    public enum UserSortField : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserKey = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Role = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Added = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LastLogOn = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Email = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FullName = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListUsersResponse", Namespace="http://schemas.datacontract.org/2004/07/Panopto.Server.Services.PublicAPI.V40")]
    [System.SerializableAttribute()]
    public partial class ListUsersResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RemoteRecorderDemoGUI.PanoptoUserManagement.User[] PagedResultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalResultCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RemoteRecorderDemoGUI.PanoptoUserManagement.User[] PagedResults {
            get {
                return this.PagedResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.PagedResultsField, value) != true)) {
                    this.PagedResultsField = value;
                    this.RaisePropertyChanged("PagedResults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalResultCount {
            get {
                return this.TotalResultCountField;
            }
            set {
                if ((this.TotalResultCountField.Equals(value) != true)) {
                    this.TotalResultCountField = value;
                    this.RaisePropertyChanged("TotalResultCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Group", Namespace="http://schemas.datacontract.org/2004/07/Panopto.Server.Services.PublicAPI.V40")]
    [System.SerializableAttribute()]
    public partial class Group : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RemoteRecorderDemoGUI.PanoptoUserManagement.GroupType GroupTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MembershipProviderNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RemoteRecorderDemoGUI.PanoptoUserManagement.SystemRole SystemRoleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalId {
            get {
                return this.ExternalIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalIdField, value) != true)) {
                    this.ExternalIdField = value;
                    this.RaisePropertyChanged("ExternalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RemoteRecorderDemoGUI.PanoptoUserManagement.GroupType GroupType {
            get {
                return this.GroupTypeField;
            }
            set {
                if ((this.GroupTypeField.Equals(value) != true)) {
                    this.GroupTypeField = value;
                    this.RaisePropertyChanged("GroupType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MembershipProviderName {
            get {
                return this.MembershipProviderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MembershipProviderNameField, value) != true)) {
                    this.MembershipProviderNameField = value;
                    this.RaisePropertyChanged("MembershipProviderName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RemoteRecorderDemoGUI.PanoptoUserManagement.SystemRole SystemRole {
            get {
                return this.SystemRoleField;
            }
            set {
                if ((this.SystemRoleField.Equals(value) != true)) {
                    this.SystemRoleField = value;
                    this.RaisePropertyChanged("SystemRole");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GroupType", Namespace="http://schemas.datacontract.org/2004/07/Panopto.Server.Services.PublicAPI.V40")]
    public enum GroupType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ActiveDirectory = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        External = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Internal = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListGroupsResponse", Namespace="http://schemas.datacontract.org/2004/07/Panopto.Server.Services.PublicAPI.V40")]
    [System.SerializableAttribute()]
    public partial class ListGroupsResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RemoteRecorderDemoGUI.PanoptoUserManagement.Group[] PagedResultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalResultCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RemoteRecorderDemoGUI.PanoptoUserManagement.Group[] PagedResults {
            get {
                return this.PagedResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.PagedResultsField, value) != true)) {
                    this.PagedResultsField = value;
                    this.RaisePropertyChanged("PagedResults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalResultCount {
            get {
                return this.TotalResultCountField;
            }
            set {
                if ((this.TotalResultCountField.Equals(value) != true)) {
                    this.TotalResultCountField = value;
                    this.RaisePropertyChanged("TotalResultCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PanoptoUserManagement.IUserManagement")]
    public interface IUserManagement {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/CreateUser", ReplyAction="http://tempuri.org/IUserManagement/CreateUserResponse")]
        System.Guid CreateUser(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, RemoteRecorderDemoGUI.PanoptoUserManagement.User user, string initialPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/CreateUser", ReplyAction="http://tempuri.org/IUserManagement/CreateUserResponse")]
        System.Threading.Tasks.Task<System.Guid> CreateUserAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, RemoteRecorderDemoGUI.PanoptoUserManagement.User user, string initialPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/CreateUsers", ReplyAction="http://tempuri.org/IUserManagement/CreateUsersResponse")]
        RemoteRecorderDemoGUI.PanoptoUserManagement.User[] CreateUsers(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, RemoteRecorderDemoGUI.PanoptoUserManagement.User[] users);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/CreateUsers", ReplyAction="http://tempuri.org/IUserManagement/CreateUsersResponse")]
        System.Threading.Tasks.Task<RemoteRecorderDemoGUI.PanoptoUserManagement.User[]> CreateUsersAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, RemoteRecorderDemoGUI.PanoptoUserManagement.User[] users);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/GetUserByKey", ReplyAction="http://tempuri.org/IUserManagement/GetUserByKeyResponse")]
        RemoteRecorderDemoGUI.PanoptoUserManagement.User GetUserByKey(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, string userKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/GetUserByKey", ReplyAction="http://tempuri.org/IUserManagement/GetUserByKeyResponse")]
        System.Threading.Tasks.Task<RemoteRecorderDemoGUI.PanoptoUserManagement.User> GetUserByKeyAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, string userKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/GetUsers", ReplyAction="http://tempuri.org/IUserManagement/GetUsersResponse")]
        RemoteRecorderDemoGUI.PanoptoUserManagement.User[] GetUsers(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid[] userIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/GetUsers", ReplyAction="http://tempuri.org/IUserManagement/GetUsersResponse")]
        System.Threading.Tasks.Task<RemoteRecorderDemoGUI.PanoptoUserManagement.User[]> GetUsersAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid[] userIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/ListUsers", ReplyAction="http://tempuri.org/IUserManagement/ListUsersResponse")]
        RemoteRecorderDemoGUI.PanoptoUserManagement.ListUsersResponse ListUsers(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, RemoteRecorderDemoGUI.PanoptoUserManagement.ListUsersRequest parameters, string searchQuery);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/ListUsers", ReplyAction="http://tempuri.org/IUserManagement/ListUsersResponse")]
        System.Threading.Tasks.Task<RemoteRecorderDemoGUI.PanoptoUserManagement.ListUsersResponse> ListUsersAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, RemoteRecorderDemoGUI.PanoptoUserManagement.ListUsersRequest parameters, string searchQuery);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/UpdateContactInfo", ReplyAction="http://tempuri.org/IUserManagement/UpdateContactInfoResponse")]
        void UpdateContactInfo(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid userId, string firstName, string lastName, string email, bool sendNotifications);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/UpdateContactInfo", ReplyAction="http://tempuri.org/IUserManagement/UpdateContactInfoResponse")]
        System.Threading.Tasks.Task UpdateContactInfoAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid userId, string firstName, string lastName, string email, bool sendNotifications);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/UpdateUserBio", ReplyAction="http://tempuri.org/IUserManagement/UpdateUserBioResponse")]
        void UpdateUserBio(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid userId, string bio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/UpdateUserBio", ReplyAction="http://tempuri.org/IUserManagement/UpdateUserBioResponse")]
        System.Threading.Tasks.Task UpdateUserBioAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid userId, string bio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/UpdatePassword", ReplyAction="http://tempuri.org/IUserManagement/UpdatePasswordResponse")]
        void UpdatePassword(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid userId, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/UpdatePassword", ReplyAction="http://tempuri.org/IUserManagement/UpdatePasswordResponse")]
        System.Threading.Tasks.Task UpdatePasswordAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid userId, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/ResetPassword", ReplyAction="http://tempuri.org/IUserManagement/ResetPasswordResponse")]
        void ResetPassword(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/ResetPassword", ReplyAction="http://tempuri.org/IUserManagement/ResetPasswordResponse")]
        System.Threading.Tasks.Task ResetPasswordAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/UnlockAccount", ReplyAction="http://tempuri.org/IUserManagement/UnlockAccountResponse")]
        void UnlockAccount(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/UnlockAccount", ReplyAction="http://tempuri.org/IUserManagement/UnlockAccountResponse")]
        System.Threading.Tasks.Task UnlockAccountAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/SetSystemRole", ReplyAction="http://tempuri.org/IUserManagement/SetSystemRoleResponse")]
        void SetSystemRole(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid userId, RemoteRecorderDemoGUI.PanoptoUserManagement.SystemRole role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/SetSystemRole", ReplyAction="http://tempuri.org/IUserManagement/SetSystemRoleResponse")]
        System.Threading.Tasks.Task SetSystemRoleAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid userId, RemoteRecorderDemoGUI.PanoptoUserManagement.SystemRole role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/DeleteUsers", ReplyAction="http://tempuri.org/IUserManagement/DeleteUsersResponse")]
        void DeleteUsers(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid[] userIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/DeleteUsers", ReplyAction="http://tempuri.org/IUserManagement/DeleteUsersResponse")]
        System.Threading.Tasks.Task DeleteUsersAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid[] userIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/CreateInternalGroup", ReplyAction="http://tempuri.org/IUserManagement/CreateInternalGroupResponse")]
        RemoteRecorderDemoGUI.PanoptoUserManagement.Group CreateInternalGroup(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, string groupName, System.Guid[] memberIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/CreateInternalGroup", ReplyAction="http://tempuri.org/IUserManagement/CreateInternalGroupResponse")]
        System.Threading.Tasks.Task<RemoteRecorderDemoGUI.PanoptoUserManagement.Group> CreateInternalGroupAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, string groupName, System.Guid[] memberIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/GetGroupIsPublic", ReplyAction="http://tempuri.org/IUserManagement/GetGroupIsPublicResponse")]
        bool GetGroupIsPublic(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/GetGroupIsPublic", ReplyAction="http://tempuri.org/IUserManagement/GetGroupIsPublicResponse")]
        System.Threading.Tasks.Task<bool> GetGroupIsPublicAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/SetGroupIsPublic", ReplyAction="http://tempuri.org/IUserManagement/SetGroupIsPublicResponse")]
        void SetGroupIsPublic(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid groupId, bool isPublic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/SetGroupIsPublic", ReplyAction="http://tempuri.org/IUserManagement/SetGroupIsPublicResponse")]
        System.Threading.Tasks.Task SetGroupIsPublicAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid groupId, bool isPublic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/CreateExternalGroup", ReplyAction="http://tempuri.org/IUserManagement/CreateExternalGroupResponse")]
        RemoteRecorderDemoGUI.PanoptoUserManagement.Group CreateExternalGroup(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, string groupName, string externalProvider, string externalId, System.Guid[] memberIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/CreateExternalGroup", ReplyAction="http://tempuri.org/IUserManagement/CreateExternalGroupResponse")]
        System.Threading.Tasks.Task<RemoteRecorderDemoGUI.PanoptoUserManagement.Group> CreateExternalGroupAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, string groupName, string externalProvider, string externalId, System.Guid[] memberIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/AddMembersToInternalGroup", ReplyAction="http://tempuri.org/IUserManagement/AddMembersToInternalGroupResponse")]
        void AddMembersToInternalGroup(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid groupId, System.Guid[] memberIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/AddMembersToInternalGroup", ReplyAction="http://tempuri.org/IUserManagement/AddMembersToInternalGroupResponse")]
        System.Threading.Tasks.Task AddMembersToInternalGroupAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid groupId, System.Guid[] memberIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/RemoveMembersFromInternalGroup", ReplyAction="http://tempuri.org/IUserManagement/RemoveMembersFromInternalGroupResponse")]
        void RemoveMembersFromInternalGroup(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid groupId, System.Guid[] memberIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/RemoveMembersFromInternalGroup", ReplyAction="http://tempuri.org/IUserManagement/RemoveMembersFromInternalGroupResponse")]
        System.Threading.Tasks.Task RemoveMembersFromInternalGroupAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid groupId, System.Guid[] memberIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/SyncExternalUser", ReplyAction="http://tempuri.org/IUserManagement/SyncExternalUserResponse")]
        void SyncExternalUser(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, string firstName, string lastName, string email, bool EmailSessionNotifications, string[] externalGroupIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/SyncExternalUser", ReplyAction="http://tempuri.org/IUserManagement/SyncExternalUserResponse")]
        System.Threading.Tasks.Task SyncExternalUserAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, string firstName, string lastName, string email, bool EmailSessionNotifications, string[] externalGroupIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/DeleteGroup", ReplyAction="http://tempuri.org/IUserManagement/DeleteGroupResponse")]
        void DeleteGroup(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/DeleteGroup", ReplyAction="http://tempuri.org/IUserManagement/DeleteGroupResponse")]
        System.Threading.Tasks.Task DeleteGroupAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/GetGroup", ReplyAction="http://tempuri.org/IUserManagement/GetGroupResponse")]
        RemoteRecorderDemoGUI.PanoptoUserManagement.Group GetGroup(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/GetGroup", ReplyAction="http://tempuri.org/IUserManagement/GetGroupResponse")]
        System.Threading.Tasks.Task<RemoteRecorderDemoGUI.PanoptoUserManagement.Group> GetGroupAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/ListGroups", ReplyAction="http://tempuri.org/IUserManagement/ListGroupsResponse")]
        RemoteRecorderDemoGUI.PanoptoUserManagement.ListGroupsResponse ListGroups(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, RemoteRecorderDemoGUI.PanoptoUserManagement.Pagination pagination);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/ListGroups", ReplyAction="http://tempuri.org/IUserManagement/ListGroupsResponse")]
        System.Threading.Tasks.Task<RemoteRecorderDemoGUI.PanoptoUserManagement.ListGroupsResponse> ListGroupsAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, RemoteRecorderDemoGUI.PanoptoUserManagement.Pagination pagination);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/GetGroupsByName", ReplyAction="http://tempuri.org/IUserManagement/GetGroupsByNameResponse")]
        RemoteRecorderDemoGUI.PanoptoUserManagement.Group[] GetGroupsByName(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, string groupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagement/GetGroupsByName", ReplyAction="http://tempuri.org/IUserManagement/GetGroupsByNameResponse")]
        System.Threading.Tasks.Task<RemoteRecorderDemoGUI.PanoptoUserManagement.Group[]> GetGroupsByNameAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, string groupName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserManagementChannel : RemoteRecorderDemoGUI.PanoptoUserManagement.IUserManagement, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserManagementClient : System.ServiceModel.ClientBase<RemoteRecorderDemoGUI.PanoptoUserManagement.IUserManagement>, RemoteRecorderDemoGUI.PanoptoUserManagement.IUserManagement {
        
        public UserManagementClient() {
        }
        
        public UserManagementClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserManagementClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagementClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagementClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Guid CreateUser(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, RemoteRecorderDemoGUI.PanoptoUserManagement.User user, string initialPassword) {
            return base.Channel.CreateUser(auth, user, initialPassword);
        }
        
        public System.Threading.Tasks.Task<System.Guid> CreateUserAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, RemoteRecorderDemoGUI.PanoptoUserManagement.User user, string initialPassword) {
            return base.Channel.CreateUserAsync(auth, user, initialPassword);
        }
        
        public RemoteRecorderDemoGUI.PanoptoUserManagement.User[] CreateUsers(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, RemoteRecorderDemoGUI.PanoptoUserManagement.User[] users) {
            return base.Channel.CreateUsers(auth, users);
        }
        
        public System.Threading.Tasks.Task<RemoteRecorderDemoGUI.PanoptoUserManagement.User[]> CreateUsersAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, RemoteRecorderDemoGUI.PanoptoUserManagement.User[] users) {
            return base.Channel.CreateUsersAsync(auth, users);
        }
        
        public RemoteRecorderDemoGUI.PanoptoUserManagement.User GetUserByKey(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, string userKey) {
            return base.Channel.GetUserByKey(auth, userKey);
        }
        
        public System.Threading.Tasks.Task<RemoteRecorderDemoGUI.PanoptoUserManagement.User> GetUserByKeyAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, string userKey) {
            return base.Channel.GetUserByKeyAsync(auth, userKey);
        }
        
        public RemoteRecorderDemoGUI.PanoptoUserManagement.User[] GetUsers(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid[] userIds) {
            return base.Channel.GetUsers(auth, userIds);
        }
        
        public System.Threading.Tasks.Task<RemoteRecorderDemoGUI.PanoptoUserManagement.User[]> GetUsersAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid[] userIds) {
            return base.Channel.GetUsersAsync(auth, userIds);
        }
        
        public RemoteRecorderDemoGUI.PanoptoUserManagement.ListUsersResponse ListUsers(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, RemoteRecorderDemoGUI.PanoptoUserManagement.ListUsersRequest parameters, string searchQuery) {
            return base.Channel.ListUsers(auth, parameters, searchQuery);
        }
        
        public System.Threading.Tasks.Task<RemoteRecorderDemoGUI.PanoptoUserManagement.ListUsersResponse> ListUsersAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, RemoteRecorderDemoGUI.PanoptoUserManagement.ListUsersRequest parameters, string searchQuery) {
            return base.Channel.ListUsersAsync(auth, parameters, searchQuery);
        }
        
        public void UpdateContactInfo(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid userId, string firstName, string lastName, string email, bool sendNotifications) {
            base.Channel.UpdateContactInfo(auth, userId, firstName, lastName, email, sendNotifications);
        }
        
        public System.Threading.Tasks.Task UpdateContactInfoAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid userId, string firstName, string lastName, string email, bool sendNotifications) {
            return base.Channel.UpdateContactInfoAsync(auth, userId, firstName, lastName, email, sendNotifications);
        }
        
        public void UpdateUserBio(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid userId, string bio) {
            base.Channel.UpdateUserBio(auth, userId, bio);
        }
        
        public System.Threading.Tasks.Task UpdateUserBioAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid userId, string bio) {
            return base.Channel.UpdateUserBioAsync(auth, userId, bio);
        }
        
        public void UpdatePassword(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid userId, string newPassword) {
            base.Channel.UpdatePassword(auth, userId, newPassword);
        }
        
        public System.Threading.Tasks.Task UpdatePasswordAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid userId, string newPassword) {
            return base.Channel.UpdatePasswordAsync(auth, userId, newPassword);
        }
        
        public void ResetPassword(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid userId) {
            base.Channel.ResetPassword(auth, userId);
        }
        
        public System.Threading.Tasks.Task ResetPasswordAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid userId) {
            return base.Channel.ResetPasswordAsync(auth, userId);
        }
        
        public void UnlockAccount(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid userId) {
            base.Channel.UnlockAccount(auth, userId);
        }
        
        public System.Threading.Tasks.Task UnlockAccountAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid userId) {
            return base.Channel.UnlockAccountAsync(auth, userId);
        }
        
        public void SetSystemRole(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid userId, RemoteRecorderDemoGUI.PanoptoUserManagement.SystemRole role) {
            base.Channel.SetSystemRole(auth, userId, role);
        }
        
        public System.Threading.Tasks.Task SetSystemRoleAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid userId, RemoteRecorderDemoGUI.PanoptoUserManagement.SystemRole role) {
            return base.Channel.SetSystemRoleAsync(auth, userId, role);
        }
        
        public void DeleteUsers(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid[] userIds) {
            base.Channel.DeleteUsers(auth, userIds);
        }
        
        public System.Threading.Tasks.Task DeleteUsersAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid[] userIds) {
            return base.Channel.DeleteUsersAsync(auth, userIds);
        }
        
        public RemoteRecorderDemoGUI.PanoptoUserManagement.Group CreateInternalGroup(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, string groupName, System.Guid[] memberIds) {
            return base.Channel.CreateInternalGroup(auth, groupName, memberIds);
        }
        
        public System.Threading.Tasks.Task<RemoteRecorderDemoGUI.PanoptoUserManagement.Group> CreateInternalGroupAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, string groupName, System.Guid[] memberIds) {
            return base.Channel.CreateInternalGroupAsync(auth, groupName, memberIds);
        }
        
        public bool GetGroupIsPublic(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid groupId) {
            return base.Channel.GetGroupIsPublic(auth, groupId);
        }
        
        public System.Threading.Tasks.Task<bool> GetGroupIsPublicAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid groupId) {
            return base.Channel.GetGroupIsPublicAsync(auth, groupId);
        }
        
        public void SetGroupIsPublic(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid groupId, bool isPublic) {
            base.Channel.SetGroupIsPublic(auth, groupId, isPublic);
        }
        
        public System.Threading.Tasks.Task SetGroupIsPublicAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid groupId, bool isPublic) {
            return base.Channel.SetGroupIsPublicAsync(auth, groupId, isPublic);
        }
        
        public RemoteRecorderDemoGUI.PanoptoUserManagement.Group CreateExternalGroup(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, string groupName, string externalProvider, string externalId, System.Guid[] memberIds) {
            return base.Channel.CreateExternalGroup(auth, groupName, externalProvider, externalId, memberIds);
        }
        
        public System.Threading.Tasks.Task<RemoteRecorderDemoGUI.PanoptoUserManagement.Group> CreateExternalGroupAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, string groupName, string externalProvider, string externalId, System.Guid[] memberIds) {
            return base.Channel.CreateExternalGroupAsync(auth, groupName, externalProvider, externalId, memberIds);
        }
        
        public void AddMembersToInternalGroup(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid groupId, System.Guid[] memberIds) {
            base.Channel.AddMembersToInternalGroup(auth, groupId, memberIds);
        }
        
        public System.Threading.Tasks.Task AddMembersToInternalGroupAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid groupId, System.Guid[] memberIds) {
            return base.Channel.AddMembersToInternalGroupAsync(auth, groupId, memberIds);
        }
        
        public void RemoveMembersFromInternalGroup(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid groupId, System.Guid[] memberIds) {
            base.Channel.RemoveMembersFromInternalGroup(auth, groupId, memberIds);
        }
        
        public System.Threading.Tasks.Task RemoveMembersFromInternalGroupAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid groupId, System.Guid[] memberIds) {
            return base.Channel.RemoveMembersFromInternalGroupAsync(auth, groupId, memberIds);
        }
        
        public void SyncExternalUser(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, string firstName, string lastName, string email, bool EmailSessionNotifications, string[] externalGroupIds) {
            base.Channel.SyncExternalUser(auth, firstName, lastName, email, EmailSessionNotifications, externalGroupIds);
        }
        
        public System.Threading.Tasks.Task SyncExternalUserAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, string firstName, string lastName, string email, bool EmailSessionNotifications, string[] externalGroupIds) {
            return base.Channel.SyncExternalUserAsync(auth, firstName, lastName, email, EmailSessionNotifications, externalGroupIds);
        }
        
        public void DeleteGroup(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid groupId) {
            base.Channel.DeleteGroup(auth, groupId);
        }
        
        public System.Threading.Tasks.Task DeleteGroupAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid groupId) {
            return base.Channel.DeleteGroupAsync(auth, groupId);
        }
        
        public RemoteRecorderDemoGUI.PanoptoUserManagement.Group GetGroup(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid groupId) {
            return base.Channel.GetGroup(auth, groupId);
        }
        
        public System.Threading.Tasks.Task<RemoteRecorderDemoGUI.PanoptoUserManagement.Group> GetGroupAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, System.Guid groupId) {
            return base.Channel.GetGroupAsync(auth, groupId);
        }
        
        public RemoteRecorderDemoGUI.PanoptoUserManagement.ListGroupsResponse ListGroups(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, RemoteRecorderDemoGUI.PanoptoUserManagement.Pagination pagination) {
            return base.Channel.ListGroups(auth, pagination);
        }
        
        public System.Threading.Tasks.Task<RemoteRecorderDemoGUI.PanoptoUserManagement.ListGroupsResponse> ListGroupsAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, RemoteRecorderDemoGUI.PanoptoUserManagement.Pagination pagination) {
            return base.Channel.ListGroupsAsync(auth, pagination);
        }
        
        public RemoteRecorderDemoGUI.PanoptoUserManagement.Group[] GetGroupsByName(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, string groupName) {
            return base.Channel.GetGroupsByName(auth, groupName);
        }
        
        public System.Threading.Tasks.Task<RemoteRecorderDemoGUI.PanoptoUserManagement.Group[]> GetGroupsByNameAsync(RemoteRecorderDemoGUI.PanoptoUserManagement.AuthenticationInfo auth, string groupName) {
            return base.Channel.GetGroupsByNameAsync(auth, groupName);
        }
    }
}
